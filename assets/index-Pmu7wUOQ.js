(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))l(r);new MutationObserver(r=>{for(const d of r)if(d.type==="childList")for(const a of d.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&l(a)}).observe(document,{childList:!0,subtree:!0});function o(r){const d={};return r.integrity&&(d.integrity=r.integrity),r.referrerPolicy&&(d.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?d.credentials="include":r.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function l(r){if(r.ep)return;r.ep=!0;const d=o(r);fetch(r.href,d)}})();class C{constructor({id:t,title:o,description:l="",priority:r="low",projectId:d,completed:a=!1}){this.id=t??crypto.randomUUID(),this.title=o,this.description=l,this.priority=r,this.projectId=d,this.completed=a}markComplete(){this.completed=!0}restore(){this.completed=!1}toPlainObject(){return{...this}}}let i=[];const c={add(e){const t=new C(e);return i.push(t),t},edit(e,t){const o=this.getById(e);return o?(Object.assign(o,t),!0):!1},remove(e){const t=i.findIndex(o=>o.id===e);return t===-1?!1:(i.splice(t,1),!0)},removeByProject(e){i=i.filter(t=>t.projectId!==e)},markComplete(e){const t=this.getById(e);return t?(t.markComplete(),!0):!1},restore(e){const t=this.getById(e);return t?(t.restore(),!0):!1},moveToProject(e,t){const o=this.getById(e);return o?(o.projectId=t,!0):!1},clearCompleted(){i=i.filter(e=>!e.completed)},getById(e){return i.find(t=>t.id===e)},getByProject(e){return i.filter(t=>t.projectId===e&&!t.completed)},getCompleted(){return i.filter(e=>e.completed)},getAll(){return[...i]},load(e){i=e.map(t=>new C(t))},toPlainObject(){return i.map(e=>e.toPlainObject())}};class b{constructor({id:t,name:o}){this.id=t??crypto.randomUUID(),this.name=o}toPlainObject(){return{...this}}}let m=[],y=null;const s={add(e){const t=new b(e);return m.push(t),t},edit(e,t){const o=this.getById(e);return o?(Object.assign(o,t),!0):!1},remove(e){const t=m.findIndex(o=>o.id===e);return t===-1?!1:(m.splice(t,1),y===e&&(y=m[0]?.id??null),!0)},getById(e){return m.find(t=>t.id===e)},getFirstIdByName(e){return m.find(t=>t.name===e).id},getAll(){return[...m]},getActive(){return this.getById(y)},getActiveId(){return y},setActive(e){this.getById(e)&&(y=e)},createDefaultProject(){const e=this.add({name:"My Project"});return this.setActive(e.id),e},load(e){m=e.map(t=>new b(t))},toPlainObject(){return m.map(e=>e.toPlainObject())}},T="todoAppData",A=1,E={save(e,t,o){const l={version:A,data:{projects:e,todos:t,viewState:o}};localStorage.setItem(T,JSON.stringify(l))},load(){try{const e=localStorage.getItem(T);if(!e)return null;const t=JSON.parse(e);if(t.version!==A)throw new Error("Version mismatch");return t.data}catch(e){return console.warn("Storage load failed:",e),null}},clear(){localStorage.removeItem(T)}};let v="project",I=null;const n={getCurrentView(){return v},setProjectView(e){v="project",I=e},setCompletedView(){v="completed"},isCompletedView(){},getActiveProjectId(){return I},toPlainObject(){return v==="project"?{type:"project",projectId:I}:v==="completed"?{type:"completed"}:null},load(e){v=e.type,I=e.projectId}},p={bindUIEvents(e){document.querySelector("#add-project")?.addEventListener("click",e.handleAddProject),document.querySelector("#add-todo")?.addEventListener("click",e.handleAddTodo),document.querySelector("#toggle-completed")?.addEventListener("click",e.handleToggleCompleted),document.querySelector("#project-list")?.addEventListener("click",t=>{const o=t.target.closest("li")?.dataset.id;o&&(t.target.matches("#project-edit-btn")?e.handleClickProjectEdit(o):e.handleSelectProject(o))}),document.querySelector("#todo-list")?.addEventListener("click",t=>{const o=t.target.closest("li")?.dataset.id;o&&(t.target.matches(".complete-btn")?(t.target.closest("li")?.classList.add("fading-out"),setTimeout(()=>{e.handleToggleTodo(o)},400)):t.target.matches(".todo-delete-btn")?e.handleRemoveTodo(o):e.handleSelectTodo(o))}),document.querySelector("#delete-all-completed-btn")?.addEventListener("click",e.handleRemoveCompleted),document.querySelector("#delete-project-btn")?.addEventListener("click",t=>{this.confirmDialog("⚠️ WARNING: When you delete a project, all its tasks will be deleted as well.")&&(e.handleDeleteProject(t.target.dataset.id),document.querySelector("#modal-overlay").classList.add("hidden"))}),document.querySelector("#toggle-sidebar")?.addEventListener("click",()=>{document.querySelector("aside")?.classList.toggle("open")})},renderProjects(e,t){const o=document.querySelector("#project-list");o.innerHTML="",e.forEach(l=>{const r=document.createElement("p"),d=document.createElement("li"),a=document.createElement("button");r.textContent=l.name,d.dataset.id=l.id,l.id===t&&(r.style.fontWeight="bold",d.style.backgroundColor="rgba(171, 233, 163, 0.3)"),r.id="project-name",a.textContent="edit",a.id="project-edit-btn",d.appendChild(r),d.appendChild(a),o.appendChild(d)})},renderTodos(e){const t=document.querySelector("#todo-list");t.innerHTML="",e.forEach(o=>{const l=document.createElement("li");l.dataset.id=o.id,l.classList.add(`priority-${o.priority}`),l.innerHTML=`
        <button class="complete-btn">${o.completed?"Restore":"Done"}</button>
        <div class="todo-content">
          <div class="todo-title">${o.title}</div>
          <div class="todo-desc">${o.description}</div>
        </div>
        <button class="todo-delete-btn">Delete</button>
      `,t.appendChild(l)})},toggleDeleteAllCompletedBtn(e){document.querySelector("#delete-all-completed-btn").classList.toggle("hidden",!e)},confirmDialog(e){return confirm(e)},openModal({title:e,projectForm:t=!1,editForm:o=!1,defaultTodoInfo:l,activeProjectId:r,allProjects:d,targetId:a,targetProject:w,onSubmit:L}){const f=document.querySelector("#modal"),u=f.querySelector("form"),q=f.querySelector("#modal-description-wrapper"),B=f.querySelector("fieldset");f.querySelector("#modal-form label").textContent=e,q.classList.toggle("hidden",t),B.classList.toggle("hidden",t);const S=f.querySelector("#delete-project-btn");if(S.classList.toggle("hidden",!o||!t),S.dataset.id="",S.dataset.id=a,f.querySelector("#move-to-project").classList.toggle("hidden",!o||t),u.reset(),document.querySelector("#modal-overlay").classList.remove("hidden"),f.querySelector("#modal-cancel")?.addEventListener("click",()=>{document.querySelector("#modal-overlay").classList.add("hidden")}),u.elements.title.focus(),!t&&o){u.elements.title.value=l.title,u.elements.description.value=l.description,u.elements.priority.value=l.priority;const P=f.querySelector("#move-to-project select");P.innerHTML="",d.forEach(g=>{const j=document.createElement("option");j.value=g.id,j.textContent=g.name,P.appendChild(j),g.id===r&&(j.selected=!0)})}t&&o&&(u.elements.title.value=w.name),u.onsubmit=P=>{P.preventDefault();const g=u.elements.title.value.trim(),j=g,O=u.elements.description?.value.trim()??"",D=u.elements.priority?.value??"low",M=u.elements.project?.value;g&&(document.querySelector("#modal-overlay").classList.add("hidden"),L?.({title:g,name:j,description:O,priority:D,newProjectId:M}))}}},h={init(){const e=E.load();if(e?.projects?.length>0)n.load(e.viewState),s.load(e.projects),s.setActive(n.getActiveProjectId()),c.load(e.todos);else{const t=s.createDefaultProject();n.setProjectView(t.id),this.persist()}p.bindUIEvents(this),this.renderProjects(),this.renderTodos()},renderProjects(){p.renderProjects(s.getAll(),s.getActiveId())},renderTodos(){const e=n.getCurrentView(),t=n.getActiveProjectId();if(!e)return;let o=c.getByProject(t);e==="completed"&&(o=c.getCompleted().filter(d=>d.projectId===t));const l=e==="completed";p.toggleDeleteAllCompletedBtn(l),p.renderTodos(o)},handleAddTodo(){n.getActiveProjectId()&&p.openModal({title:"New Task",projectForm:!1,onSubmit({title:e,description:t,priority:o}){c.add({title:e+" and love Ed",description:t,priority:o,projectId:n.getActiveProjectId()}),h.persist(),h.renderTodos()}})},handleEditTodo(e,t){c.edit(e,t),this.persist(),this.renderTodos()},handleEditProject(e,t){s.edit(e,t),this.persist(),this.renderProjects()},handleRemoveTodo(e){c.remove(e),this.persist(),this.renderTodos()},handleToggleTodo(e){const t=c.getById(e);t&&(t.completed?c.restore(e):c.markComplete(e),this.persist(),this.renderProjects(),this.renderTodos())},handleAddProject(){p.openModal({title:"New Project",projectForm:!0,onSubmit({title:e}){const t=s.add({name:e});h.handleSelectProject(t.id)}})},handleDeleteProject(e){s.remove(e),c.removeByProject(e),n.setProjectView(s.getActiveId()),this.persist(),this.renderProjects(),this.renderTodos()},handleMoveToProject(e,t){t&&(c.moveToProject(e,t),this.persist(),this.renderProjects(),this.renderTodos())},handleSelectProject(e){s.setActive(e),n.setProjectView(e),this.persist(),this.renderProjects(),this.renderTodos()},handleClickProjectEdit(e){e&&p.openModal({title:"Project Name:",projectForm:!0,editForm:!0,activeProjectId:n.getActiveProjectId(),targetId:e,targetProject:s.getById(e),onSubmit:({name:t})=>{this.handleEditProject(e,{name:t})}})},handleToggleCompleted(){n.getCurrentView()==="completed"?n.setProjectView(n.getActiveProjectId()):n.setCompletedView(),h.persist(),h.renderProjects(),h.renderTodos()},handleRemoveCompleted(){if(n.getCurrentView()==="completed"){const t=c.getCompleted().filter(o=>o.projectId===n.getActiveProjectId());if(!t[0]||!p.confirmDialog("⚠️ WARNING: Are you sure to delete all the completed tasks in this project?"))return;t.forEach(o=>c.remove(o.id)),h.persist(),h.renderTodos()}},handleSelectTodo(e){const t=c.getById(e);t&&p.openModal({title:"Title: ",projectForm:!1,editForm:!0,defaultTodoInfo:t,activeProjectId:n.getActiveProjectId(),allProjects:s.getAll(),onSubmit:({title:o,description:l,priority:r,newProjectId:d})=>{this.handleEditTodo(e,{title:o,description:l,priority:r}),this.handleMoveToProject(e,d)}})},persist(){E.save(s.toPlainObject(),c.toPlainObject(),n.toPlainObject())}};h.init();
